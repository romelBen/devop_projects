---
- hosts: all
  become: true
  vars_files:
    - vars/server-setup.yml

  tasks:
    - name: Setup 'wheel' group
      group:
        name: wheel
        state: present

    # Sudo group setup
    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    # User + Key Setup
    - name: Create a regular user with sudo privilages to wheel group
      user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    # Make sure to create an SSH key on your local computer.
    # This can be done using this command: ssh-keygen -t rsa -b 4096 -C "email_here@domain.com"
    - name: Set authorized key for remote user
      ansible.posix.authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key }}"

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

    # Install system packages for Debian/Ubuntu distros (since the package manager is using apt)
    - name: Update apt packages
      apt:
        update_cache: yes

    - name: Install all required system packages
      apt:
        name: "{{ sys_packages }}"
        state: latest

    # Copy over NTP configurations
    - name: Copy over the NTP configuration
      template:
        src: /home/romelben/Documents/infrastructure_projects/scripting_projects/ansible-scripts/server-playbook/vars/ntp.conf
        dest: /etc/ntp.conf
      notify:
        - restart ntp
        - force ntp update
      tags: ntp

    # Confirm if NTP has began in the system
    - name: Confirm if NTP has initiated
      service:
        name: ntp
        state: started
        enabled: yes
      tags: ntp

    # UFW setup
    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming